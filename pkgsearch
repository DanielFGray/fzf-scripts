#!/usr/bin/env bash

declare esc=$(printf '\033')
declare c_reset="${esc}[0m"
declare c_red="${esc}[31m"
declare c_green="${esc}[32m"
declare c_blue="${esc}[34m"

usage() {
  LESS=-EXR less <<-HELP
pkgsearch [query]
lists and installs packages from your distro's repositories

without any arguments pkgsearch will list all available packages from your cache
all arguments are passed as search strings
note: on Arch Linux you must pass a string to query the AUR
HELP
}

err() {
  echo -e "${c_red}$1${c_reset}" >&2
}

die() {
  exit 1
}

has() {
  local verbose=false
  if [[ $1 == '-v' ]]; then
    verbose=true
    shift
  fi
  for c in "$@"; do c="${c%% *}"
    if ! command -v "$c" &> /dev/null; then
      [[ "$verbose" == true ]] && err "$c not found"
      return 1
    fi
  done
}

select-from() {
  local cmd='command -v'
  for a in "$@"; do
    case "$a" in
      -c)
        cmd="$2"
        shift 2
        ;;
    esac
  done
  for c in "$@"; do
    if $cmd "${c%% *}" &> /dev/null; then
      echo "$c"
      return 0
    fi
  done
  return 1
}

fzf() {
  command fzf -e +s --multi --cycle --ansi --no-hscroll --inline-info --reverse "$@"
}

install() {
  local installer pkgs
  installer="$1"
  mapfile -t pkgs
  (( ${#pkgs} > 0 )) || exit
  echo "installing ${pkgs[*]}"
  $installer "${pkgs[@]}" &> /dev/tty
}

debian() {
  fzf --query="$1" < <(apt-cache search '' |
    sort |
    sed -u -r "s|^([^ ]+)|${c_green}\1${c_reset}|") |
    cut -d' ' -f1 |
    install "sudo $(select-from 'apt' 'aptitude' 'apt-get') install"
}

arch() {
  local search
  search='pacman'
  [[ -n "$1" ]] && search=$(select-from 'pacaur' 'yaourt' 'packer' 'apacman' 'pacman')
  fzf < <( $search -Ss "$1" |
    awk '{
        getline descr;
        sub(/ */,"", descr);
        repo = blue "[" gensub(/\/.*/, "", 1) "]" reset;
        name = green gensub(/.*\//, "", 1, $1) reset;
        info = gensub(/[^ ]* /, "", 1);
        print repo, name, info, descr;
      }' blue="$c_blue" green="$c_green" reset="$c_reset"
    ) |
    cut -d' ' -f2 |
    install "${search/pacman/sudo pacman} -S"
}

if [[ $1 == -h ]]; then
  usage
  exit
fi

has -v fzf || die

request="$*"
if [[ -f /etc/debian_version ]]; then
  debian "$request"
elif [[ -f /etc/arch-release ]]; then
  arch "$request"
fi
